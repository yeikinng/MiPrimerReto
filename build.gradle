apply plugin: 'java-library'
// Para agregar un comando que se llama aggregate, que es de Serenity y es para contruir el reporte.
apply plugin: 'net.serenity-bdd.aggregator'

// repositorio para el codigo fuente
repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

// repositorio y dependencias p√†ra configurar gradle
// Es para discharge las dependencias que configuran a gradle como tal, no hacen parte del codigo fuente.
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        // De aqui viene el plugin aggregator que esta en la linea 4
        classpath('net.serenity-bdd:serenity-gradle-plugin:2.0.80'
        )
    }
}

// Dependencias del cofigo fuente
dependencies {
    // Dependencias para poder automatizar con serenety
    implementation 'net.serenity-bdd:serenity-junit:2.0.80'
    implementation 'net.serenity-bdd:serenity-cucumber:1.9.45'
    implementation 'net.serenity-bdd:serenity-core:2.0.80'
    implementation 'org.slf4j:slf4j-simple:1.7.7'
    implementation 'com.google.guava:guava:23.0'
    implementation group: 'org.apache.poi', name: 'poi', version: '3.17'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '3.17'

}

// Para configurar propiedades del comando de ejecucion de pruebas con gradle
test {

    //Ignorar los fallos es ejecutar todas las pruebas asi alguna falla
    ignoreFailures = true

}

// Configurar el encoding del proyecto
tasks.withType(JavaCompile){
    options.encoding = 'UTF-8'
}

// Continue asi falle alguna tarea de gradle
gradle.startParameter.continueOnFailure = true